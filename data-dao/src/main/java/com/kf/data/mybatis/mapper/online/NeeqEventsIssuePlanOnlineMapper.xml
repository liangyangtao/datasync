<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kf.data.mybatis.mapper.online.NeeqEventsIssuePlanOnlineMapper" >
  <resultMap id="BaseResultMap" type="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnline" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="events_id" property="eventsId" jdbcType="VARCHAR" />
    <result column="events_name" property="eventsName" jdbcType="VARCHAR" />
    <result column="stock_id" property="stockId" jdbcType="VARCHAR" />
    <result column="stock_code" property="stockCode" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="company_shortname" property="companyShortname" jdbcType="VARCHAR" />
    <result column="date_new" property="dateNew" jdbcType="TIMESTAMP" />
    <result column="date_plan" property="datePlan" jdbcType="TIMESTAMP" />
    <result column="if_dependent" property="ifDependent" jdbcType="VARCHAR" />
    <result column="progress_name" property="progressName" jdbcType="VARCHAR" />
    <result column="progress_id" property="progressId" jdbcType="VARCHAR" />
    <result column="obj_name" property="objName" jdbcType="VARCHAR" />
    <result column="pricing_rule" property="pricingRule" jdbcType="VARCHAR" />
    <result column="quant_max" property="quantMax" jdbcType="DOUBLE" />
    <result column="quant_min" property="quantMin" jdbcType="DOUBLE" />
    <result column="fund_max" property="fundMax" jdbcType="DOUBLE" />
    <result column="fund_min" property="fundMin" jdbcType="DOUBLE" />
    <result column="price_max" property="priceMax" jdbcType="DOUBLE" />
    <result column="price_min" property="priceMin" jdbcType="DOUBLE" />
    <result column="prof_pre_max" property="profPreMax" jdbcType="DOUBLE" />
    <result column="prof_pre_min" property="profPreMin" jdbcType="DOUBLE" />
    <result column="prof_post" property="profPost" jdbcType="DOUBLE" />
    <result column="prof_new" property="profNew" jdbcType="DOUBLE" />
    <result column="capital_pre" property="capitalPre" jdbcType="DOUBLE" />
    <result column="capital_post" property="capitalPost" jdbcType="DOUBLE" />
    <result column="market_value" property="marketValue" jdbcType="DOUBLE" />
    <result column="purpose" property="purpose" jdbcType="VARCHAR" />
    <result column="del_secomp_id" property="delSecompId" jdbcType="VARCHAR" />
    <result column="del_secomp_name" property="delSecompName" jdbcType="VARCHAR" />
    <result column="secomp_id" property="secompId" jdbcType="VARCHAR" />
    <result column="secomp_name" property="secompName" jdbcType="VARCHAR" />
    <result column="ref_file_url" property="refFileUrl" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnline" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    <result column="purpose_state" property="purposeState" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    id, events_id, events_name, stock_id, stock_code, company_id, company_name, company_shortname, 
    date_new, date_plan, if_dependent, progress_name, progress_id, obj_name, pricing_rule, 
    quant_max, quant_min, fund_max, fund_min, price_max, price_min, prof_pre_max, prof_pre_min, 
    prof_post, prof_new, capital_pre, capital_post, market_value, purpose, del_secomp_id, 
    del_secomp_name, secomp_id, secomp_name, ref_file_url, `status`, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    purpose_state
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnlineExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from neeq_events_issue_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnlineExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from neeq_events_issue_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from neeq_events_issue_plan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    delete from neeq_events_issue_plan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnlineExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    delete from neeq_events_issue_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnline" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into neeq_events_issue_plan (events_id, events_name, stock_id, 
      stock_code, company_id, company_name, 
      company_shortname, date_new, date_plan, 
      if_dependent, progress_name, progress_id, 
      obj_name, pricing_rule, quant_max, 
      quant_min, fund_max, fund_min, 
      price_max, price_min, prof_pre_max, 
      prof_pre_min, prof_post, prof_new, 
      capital_pre, capital_post, market_value, 
      purpose, del_secomp_id, del_secomp_name, 
      secomp_id, secomp_name, ref_file_url, 
      `status`, created_at, updated_at, 
      purpose_state)
    values (#{eventsId,jdbcType=VARCHAR}, #{eventsName,jdbcType=VARCHAR}, #{stockId,jdbcType=VARCHAR}, 
      #{stockCode,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{companyShortname,jdbcType=VARCHAR}, #{dateNew,jdbcType=TIMESTAMP}, #{datePlan,jdbcType=TIMESTAMP}, 
      #{ifDependent,jdbcType=VARCHAR}, #{progressName,jdbcType=VARCHAR}, #{progressId,jdbcType=VARCHAR}, 
      #{objName,jdbcType=VARCHAR}, #{pricingRule,jdbcType=VARCHAR}, #{quantMax,jdbcType=DOUBLE}, 
      #{quantMin,jdbcType=DOUBLE}, #{fundMax,jdbcType=DOUBLE}, #{fundMin,jdbcType=DOUBLE}, 
      #{priceMax,jdbcType=DOUBLE}, #{priceMin,jdbcType=DOUBLE}, #{profPreMax,jdbcType=DOUBLE}, 
      #{profPreMin,jdbcType=DOUBLE}, #{profPost,jdbcType=DOUBLE}, #{profNew,jdbcType=DOUBLE}, 
      #{capitalPre,jdbcType=DOUBLE}, #{capitalPost,jdbcType=DOUBLE}, #{marketValue,jdbcType=DOUBLE}, 
      #{purpose,jdbcType=VARCHAR}, #{delSecompId,jdbcType=VARCHAR}, #{delSecompName,jdbcType=VARCHAR}, 
      #{secompId,jdbcType=VARCHAR}, #{secompName,jdbcType=VARCHAR}, #{refFileUrl,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{purposeState,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnline" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into neeq_events_issue_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eventsId != null" >
        events_id,
      </if>
      <if test="eventsName != null" >
        events_name,
      </if>
      <if test="stockId != null" >
        stock_id,
      </if>
      <if test="stockCode != null" >
        stock_code,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="companyShortname != null" >
        company_shortname,
      </if>
      <if test="dateNew != null" >
        date_new,
      </if>
      <if test="datePlan != null" >
        date_plan,
      </if>
      <if test="ifDependent != null" >
        if_dependent,
      </if>
      <if test="progressName != null" >
        progress_name,
      </if>
      <if test="progressId != null" >
        progress_id,
      </if>
      <if test="objName != null" >
        obj_name,
      </if>
      <if test="pricingRule != null" >
        pricing_rule,
      </if>
      <if test="quantMax != null" >
        quant_max,
      </if>
      <if test="quantMin != null" >
        quant_min,
      </if>
      <if test="fundMax != null" >
        fund_max,
      </if>
      <if test="fundMin != null" >
        fund_min,
      </if>
      <if test="priceMax != null" >
        price_max,
      </if>
      <if test="priceMin != null" >
        price_min,
      </if>
      <if test="profPreMax != null" >
        prof_pre_max,
      </if>
      <if test="profPreMin != null" >
        prof_pre_min,
      </if>
      <if test="profPost != null" >
        prof_post,
      </if>
      <if test="profNew != null" >
        prof_new,
      </if>
      <if test="capitalPre != null" >
        capital_pre,
      </if>
      <if test="capitalPost != null" >
        capital_post,
      </if>
      <if test="marketValue != null" >
        market_value,
      </if>
      <if test="purpose != null" >
        purpose,
      </if>
      <if test="delSecompId != null" >
        del_secomp_id,
      </if>
      <if test="delSecompName != null" >
        del_secomp_name,
      </if>
      <if test="secompId != null" >
        secomp_id,
      </if>
      <if test="secompName != null" >
        secomp_name,
      </if>
      <if test="refFileUrl != null" >
        ref_file_url,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="purposeState != null" >
        purpose_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eventsId != null" >
        #{eventsId,jdbcType=VARCHAR},
      </if>
      <if test="eventsName != null" >
        #{eventsName,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null" >
        #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null" >
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyShortname != null" >
        #{companyShortname,jdbcType=VARCHAR},
      </if>
      <if test="dateNew != null" >
        #{dateNew,jdbcType=TIMESTAMP},
      </if>
      <if test="datePlan != null" >
        #{datePlan,jdbcType=TIMESTAMP},
      </if>
      <if test="ifDependent != null" >
        #{ifDependent,jdbcType=VARCHAR},
      </if>
      <if test="progressName != null" >
        #{progressName,jdbcType=VARCHAR},
      </if>
      <if test="progressId != null" >
        #{progressId,jdbcType=VARCHAR},
      </if>
      <if test="objName != null" >
        #{objName,jdbcType=VARCHAR},
      </if>
      <if test="pricingRule != null" >
        #{pricingRule,jdbcType=VARCHAR},
      </if>
      <if test="quantMax != null" >
        #{quantMax,jdbcType=DOUBLE},
      </if>
      <if test="quantMin != null" >
        #{quantMin,jdbcType=DOUBLE},
      </if>
      <if test="fundMax != null" >
        #{fundMax,jdbcType=DOUBLE},
      </if>
      <if test="fundMin != null" >
        #{fundMin,jdbcType=DOUBLE},
      </if>
      <if test="priceMax != null" >
        #{priceMax,jdbcType=DOUBLE},
      </if>
      <if test="priceMin != null" >
        #{priceMin,jdbcType=DOUBLE},
      </if>
      <if test="profPreMax != null" >
        #{profPreMax,jdbcType=DOUBLE},
      </if>
      <if test="profPreMin != null" >
        #{profPreMin,jdbcType=DOUBLE},
      </if>
      <if test="profPost != null" >
        #{profPost,jdbcType=DOUBLE},
      </if>
      <if test="profNew != null" >
        #{profNew,jdbcType=DOUBLE},
      </if>
      <if test="capitalPre != null" >
        #{capitalPre,jdbcType=DOUBLE},
      </if>
      <if test="capitalPost != null" >
        #{capitalPost,jdbcType=DOUBLE},
      </if>
      <if test="marketValue != null" >
        #{marketValue,jdbcType=DOUBLE},
      </if>
      <if test="purpose != null" >
        #{purpose,jdbcType=VARCHAR},
      </if>
      <if test="delSecompId != null" >
        #{delSecompId,jdbcType=VARCHAR},
      </if>
      <if test="delSecompName != null" >
        #{delSecompName,jdbcType=VARCHAR},
      </if>
      <if test="secompId != null" >
        #{secompId,jdbcType=VARCHAR},
      </if>
      <if test="secompName != null" >
        #{secompName,jdbcType=VARCHAR},
      </if>
      <if test="refFileUrl != null" >
        #{refFileUrl,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="purposeState != null" >
        #{purposeState,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnlineExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    select count(*) from neeq_events_issue_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:50 CST 2018.
    -->
    update neeq_events_issue_plan
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eventsId != null" >
        events_id = #{record.eventsId,jdbcType=VARCHAR},
      </if>
      <if test="record.eventsName != null" >
        events_name = #{record.eventsName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockId != null" >
        stock_id = #{record.stockId,jdbcType=VARCHAR},
      </if>
      <if test="record.stockCode != null" >
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyShortname != null" >
        company_shortname = #{record.companyShortname,jdbcType=VARCHAR},
      </if>
      <if test="record.dateNew != null" >
        date_new = #{record.dateNew,jdbcType=TIMESTAMP},
      </if>
      <if test="record.datePlan != null" >
        date_plan = #{record.datePlan,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ifDependent != null" >
        if_dependent = #{record.ifDependent,jdbcType=VARCHAR},
      </if>
      <if test="record.progressName != null" >
        progress_name = #{record.progressName,jdbcType=VARCHAR},
      </if>
      <if test="record.progressId != null" >
        progress_id = #{record.progressId,jdbcType=VARCHAR},
      </if>
      <if test="record.objName != null" >
        obj_name = #{record.objName,jdbcType=VARCHAR},
      </if>
      <if test="record.pricingRule != null" >
        pricing_rule = #{record.pricingRule,jdbcType=VARCHAR},
      </if>
      <if test="record.quantMax != null" >
        quant_max = #{record.quantMax,jdbcType=DOUBLE},
      </if>
      <if test="record.quantMin != null" >
        quant_min = #{record.quantMin,jdbcType=DOUBLE},
      </if>
      <if test="record.fundMax != null" >
        fund_max = #{record.fundMax,jdbcType=DOUBLE},
      </if>
      <if test="record.fundMin != null" >
        fund_min = #{record.fundMin,jdbcType=DOUBLE},
      </if>
      <if test="record.priceMax != null" >
        price_max = #{record.priceMax,jdbcType=DOUBLE},
      </if>
      <if test="record.priceMin != null" >
        price_min = #{record.priceMin,jdbcType=DOUBLE},
      </if>
      <if test="record.profPreMax != null" >
        prof_pre_max = #{record.profPreMax,jdbcType=DOUBLE},
      </if>
      <if test="record.profPreMin != null" >
        prof_pre_min = #{record.profPreMin,jdbcType=DOUBLE},
      </if>
      <if test="record.profPost != null" >
        prof_post = #{record.profPost,jdbcType=DOUBLE},
      </if>
      <if test="record.profNew != null" >
        prof_new = #{record.profNew,jdbcType=DOUBLE},
      </if>
      <if test="record.capitalPre != null" >
        capital_pre = #{record.capitalPre,jdbcType=DOUBLE},
      </if>
      <if test="record.capitalPost != null" >
        capital_post = #{record.capitalPost,jdbcType=DOUBLE},
      </if>
      <if test="record.marketValue != null" >
        market_value = #{record.marketValue,jdbcType=DOUBLE},
      </if>
      <if test="record.purpose != null" >
        purpose = #{record.purpose,jdbcType=VARCHAR},
      </if>
      <if test="record.delSecompId != null" >
        del_secomp_id = #{record.delSecompId,jdbcType=VARCHAR},
      </if>
      <if test="record.delSecompName != null" >
        del_secomp_name = #{record.delSecompName,jdbcType=VARCHAR},
      </if>
      <if test="record.secompId != null" >
        secomp_id = #{record.secompId,jdbcType=VARCHAR},
      </if>
      <if test="record.secompName != null" >
        secomp_name = #{record.secompName,jdbcType=VARCHAR},
      </if>
      <if test="record.refFileUrl != null" >
        ref_file_url = #{record.refFileUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.purposeState != null" >
        purpose_state = #{record.purposeState,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:51 CST 2018.
    -->
    update neeq_events_issue_plan
    set id = #{record.id,jdbcType=INTEGER},
      events_id = #{record.eventsId,jdbcType=VARCHAR},
      events_name = #{record.eventsName,jdbcType=VARCHAR},
      stock_id = #{record.stockId,jdbcType=VARCHAR},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      company_shortname = #{record.companyShortname,jdbcType=VARCHAR},
      date_new = #{record.dateNew,jdbcType=TIMESTAMP},
      date_plan = #{record.datePlan,jdbcType=TIMESTAMP},
      if_dependent = #{record.ifDependent,jdbcType=VARCHAR},
      progress_name = #{record.progressName,jdbcType=VARCHAR},
      progress_id = #{record.progressId,jdbcType=VARCHAR},
      obj_name = #{record.objName,jdbcType=VARCHAR},
      pricing_rule = #{record.pricingRule,jdbcType=VARCHAR},
      quant_max = #{record.quantMax,jdbcType=DOUBLE},
      quant_min = #{record.quantMin,jdbcType=DOUBLE},
      fund_max = #{record.fundMax,jdbcType=DOUBLE},
      fund_min = #{record.fundMin,jdbcType=DOUBLE},
      price_max = #{record.priceMax,jdbcType=DOUBLE},
      price_min = #{record.priceMin,jdbcType=DOUBLE},
      prof_pre_max = #{record.profPreMax,jdbcType=DOUBLE},
      prof_pre_min = #{record.profPreMin,jdbcType=DOUBLE},
      prof_post = #{record.profPost,jdbcType=DOUBLE},
      prof_new = #{record.profNew,jdbcType=DOUBLE},
      capital_pre = #{record.capitalPre,jdbcType=DOUBLE},
      capital_post = #{record.capitalPost,jdbcType=DOUBLE},
      market_value = #{record.marketValue,jdbcType=DOUBLE},
      purpose = #{record.purpose,jdbcType=VARCHAR},
      del_secomp_id = #{record.delSecompId,jdbcType=VARCHAR},
      del_secomp_name = #{record.delSecompName,jdbcType=VARCHAR},
      secomp_id = #{record.secompId,jdbcType=VARCHAR},
      secomp_name = #{record.secompName,jdbcType=VARCHAR},
      ref_file_url = #{record.refFileUrl,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      purpose_state = #{record.purposeState,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:51 CST 2018.
    -->
    update neeq_events_issue_plan
    set id = #{record.id,jdbcType=INTEGER},
      events_id = #{record.eventsId,jdbcType=VARCHAR},
      events_name = #{record.eventsName,jdbcType=VARCHAR},
      stock_id = #{record.stockId,jdbcType=VARCHAR},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      company_shortname = #{record.companyShortname,jdbcType=VARCHAR},
      date_new = #{record.dateNew,jdbcType=TIMESTAMP},
      date_plan = #{record.datePlan,jdbcType=TIMESTAMP},
      if_dependent = #{record.ifDependent,jdbcType=VARCHAR},
      progress_name = #{record.progressName,jdbcType=VARCHAR},
      progress_id = #{record.progressId,jdbcType=VARCHAR},
      obj_name = #{record.objName,jdbcType=VARCHAR},
      pricing_rule = #{record.pricingRule,jdbcType=VARCHAR},
      quant_max = #{record.quantMax,jdbcType=DOUBLE},
      quant_min = #{record.quantMin,jdbcType=DOUBLE},
      fund_max = #{record.fundMax,jdbcType=DOUBLE},
      fund_min = #{record.fundMin,jdbcType=DOUBLE},
      price_max = #{record.priceMax,jdbcType=DOUBLE},
      price_min = #{record.priceMin,jdbcType=DOUBLE},
      prof_pre_max = #{record.profPreMax,jdbcType=DOUBLE},
      prof_pre_min = #{record.profPreMin,jdbcType=DOUBLE},
      prof_post = #{record.profPost,jdbcType=DOUBLE},
      prof_new = #{record.profNew,jdbcType=DOUBLE},
      capital_pre = #{record.capitalPre,jdbcType=DOUBLE},
      capital_post = #{record.capitalPost,jdbcType=DOUBLE},
      market_value = #{record.marketValue,jdbcType=DOUBLE},
      purpose = #{record.purpose,jdbcType=VARCHAR},
      del_secomp_id = #{record.delSecompId,jdbcType=VARCHAR},
      del_secomp_name = #{record.delSecompName,jdbcType=VARCHAR},
      secomp_id = #{record.secompId,jdbcType=VARCHAR},
      secomp_name = #{record.secompName,jdbcType=VARCHAR},
      ref_file_url = #{record.refFileUrl,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnline" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:51 CST 2018.
    -->
    update neeq_events_issue_plan
    <set >
      <if test="eventsId != null" >
        events_id = #{eventsId,jdbcType=VARCHAR},
      </if>
      <if test="eventsName != null" >
        events_name = #{eventsName,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null" >
        stock_id = #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null" >
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyShortname != null" >
        company_shortname = #{companyShortname,jdbcType=VARCHAR},
      </if>
      <if test="dateNew != null" >
        date_new = #{dateNew,jdbcType=TIMESTAMP},
      </if>
      <if test="datePlan != null" >
        date_plan = #{datePlan,jdbcType=TIMESTAMP},
      </if>
      <if test="ifDependent != null" >
        if_dependent = #{ifDependent,jdbcType=VARCHAR},
      </if>
      <if test="progressName != null" >
        progress_name = #{progressName,jdbcType=VARCHAR},
      </if>
      <if test="progressId != null" >
        progress_id = #{progressId,jdbcType=VARCHAR},
      </if>
      <if test="objName != null" >
        obj_name = #{objName,jdbcType=VARCHAR},
      </if>
      <if test="pricingRule != null" >
        pricing_rule = #{pricingRule,jdbcType=VARCHAR},
      </if>
      <if test="quantMax != null" >
        quant_max = #{quantMax,jdbcType=DOUBLE},
      </if>
      <if test="quantMin != null" >
        quant_min = #{quantMin,jdbcType=DOUBLE},
      </if>
      <if test="fundMax != null" >
        fund_max = #{fundMax,jdbcType=DOUBLE},
      </if>
      <if test="fundMin != null" >
        fund_min = #{fundMin,jdbcType=DOUBLE},
      </if>
      <if test="priceMax != null" >
        price_max = #{priceMax,jdbcType=DOUBLE},
      </if>
      <if test="priceMin != null" >
        price_min = #{priceMin,jdbcType=DOUBLE},
      </if>
      <if test="profPreMax != null" >
        prof_pre_max = #{profPreMax,jdbcType=DOUBLE},
      </if>
      <if test="profPreMin != null" >
        prof_pre_min = #{profPreMin,jdbcType=DOUBLE},
      </if>
      <if test="profPost != null" >
        prof_post = #{profPost,jdbcType=DOUBLE},
      </if>
      <if test="profNew != null" >
        prof_new = #{profNew,jdbcType=DOUBLE},
      </if>
      <if test="capitalPre != null" >
        capital_pre = #{capitalPre,jdbcType=DOUBLE},
      </if>
      <if test="capitalPost != null" >
        capital_post = #{capitalPost,jdbcType=DOUBLE},
      </if>
      <if test="marketValue != null" >
        market_value = #{marketValue,jdbcType=DOUBLE},
      </if>
      <if test="purpose != null" >
        purpose = #{purpose,jdbcType=VARCHAR},
      </if>
      <if test="delSecompId != null" >
        del_secomp_id = #{delSecompId,jdbcType=VARCHAR},
      </if>
      <if test="delSecompName != null" >
        del_secomp_name = #{delSecompName,jdbcType=VARCHAR},
      </if>
      <if test="secompId != null" >
        secomp_id = #{secompId,jdbcType=VARCHAR},
      </if>
      <if test="secompName != null" >
        secomp_name = #{secompName,jdbcType=VARCHAR},
      </if>
      <if test="refFileUrl != null" >
        ref_file_url = #{refFileUrl,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="purposeState != null" >
        purpose_state = #{purposeState,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnline" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:51 CST 2018.
    -->
    update neeq_events_issue_plan
    set events_id = #{eventsId,jdbcType=VARCHAR},
      events_name = #{eventsName,jdbcType=VARCHAR},
      stock_id = #{stockId,jdbcType=VARCHAR},
      stock_code = #{stockCode,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      company_shortname = #{companyShortname,jdbcType=VARCHAR},
      date_new = #{dateNew,jdbcType=TIMESTAMP},
      date_plan = #{datePlan,jdbcType=TIMESTAMP},
      if_dependent = #{ifDependent,jdbcType=VARCHAR},
      progress_name = #{progressName,jdbcType=VARCHAR},
      progress_id = #{progressId,jdbcType=VARCHAR},
      obj_name = #{objName,jdbcType=VARCHAR},
      pricing_rule = #{pricingRule,jdbcType=VARCHAR},
      quant_max = #{quantMax,jdbcType=DOUBLE},
      quant_min = #{quantMin,jdbcType=DOUBLE},
      fund_max = #{fundMax,jdbcType=DOUBLE},
      fund_min = #{fundMin,jdbcType=DOUBLE},
      price_max = #{priceMax,jdbcType=DOUBLE},
      price_min = #{priceMin,jdbcType=DOUBLE},
      prof_pre_max = #{profPreMax,jdbcType=DOUBLE},
      prof_pre_min = #{profPreMin,jdbcType=DOUBLE},
      prof_post = #{profPost,jdbcType=DOUBLE},
      prof_new = #{profNew,jdbcType=DOUBLE},
      capital_pre = #{capitalPre,jdbcType=DOUBLE},
      capital_post = #{capitalPost,jdbcType=DOUBLE},
      market_value = #{marketValue,jdbcType=DOUBLE},
      purpose = #{purpose,jdbcType=VARCHAR},
      del_secomp_id = #{delSecompId,jdbcType=VARCHAR},
      del_secomp_name = #{delSecompName,jdbcType=VARCHAR},
      secomp_id = #{secompId,jdbcType=VARCHAR},
      secomp_name = #{secompName,jdbcType=VARCHAR},
      ref_file_url = #{refFileUrl,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      purpose_state = #{purposeState,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kf.data.mybatis.entity.online.NeeqEventsIssuePlanOnline" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 15 10:55:51 CST 2018.
    -->
    update neeq_events_issue_plan
    set events_id = #{eventsId,jdbcType=VARCHAR},
      events_name = #{eventsName,jdbcType=VARCHAR},
      stock_id = #{stockId,jdbcType=VARCHAR},
      stock_code = #{stockCode,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      company_shortname = #{companyShortname,jdbcType=VARCHAR},
      date_new = #{dateNew,jdbcType=TIMESTAMP},
      date_plan = #{datePlan,jdbcType=TIMESTAMP},
      if_dependent = #{ifDependent,jdbcType=VARCHAR},
      progress_name = #{progressName,jdbcType=VARCHAR},
      progress_id = #{progressId,jdbcType=VARCHAR},
      obj_name = #{objName,jdbcType=VARCHAR},
      pricing_rule = #{pricingRule,jdbcType=VARCHAR},
      quant_max = #{quantMax,jdbcType=DOUBLE},
      quant_min = #{quantMin,jdbcType=DOUBLE},
      fund_max = #{fundMax,jdbcType=DOUBLE},
      fund_min = #{fundMin,jdbcType=DOUBLE},
      price_max = #{priceMax,jdbcType=DOUBLE},
      price_min = #{priceMin,jdbcType=DOUBLE},
      prof_pre_max = #{profPreMax,jdbcType=DOUBLE},
      prof_pre_min = #{profPreMin,jdbcType=DOUBLE},
      prof_post = #{profPost,jdbcType=DOUBLE},
      prof_new = #{profNew,jdbcType=DOUBLE},
      capital_pre = #{capitalPre,jdbcType=DOUBLE},
      capital_post = #{capitalPost,jdbcType=DOUBLE},
      market_value = #{marketValue,jdbcType=DOUBLE},
      purpose = #{purpose,jdbcType=VARCHAR},
      del_secomp_id = #{delSecompId,jdbcType=VARCHAR},
      del_secomp_name = #{delSecompName,jdbcType=VARCHAR},
      secomp_id = #{secompId,jdbcType=VARCHAR},
      secomp_name = #{secompName,jdbcType=VARCHAR},
      ref_file_url = #{refFileUrl,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>