<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kf.data.mybatis.mapper.online.NeeqHistoryQuotationOnlineMapper">
  <resultMap id="BaseResultMap" type="com.kf.data.mybatis.entity.online.NeeqHistoryQuotationOnline">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="stock_id" jdbcType="VARCHAR" property="stockId" />
    <result column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <result column="shortname" jdbcType="VARCHAR" property="shortname" />
    <result column="previous_price" jdbcType="DOUBLE" property="previousPrice" />
    <result column="open_price" jdbcType="DOUBLE" property="openPrice" />
    <result column="current_price" jdbcType="DOUBLE" property="currentPrice" />
    <result column="deal_volumn" jdbcType="DOUBLE" property="dealVolumn" />
    <result column="deal_sum" jdbcType="DOUBLE" property="dealSum" />
    <result column="deal_num" jdbcType="DOUBLE" property="dealNum" />
    <result column="max_price" jdbcType="DOUBLE" property="maxPrice" />
    <result column="min_price" jdbcType="DOUBLE" property="minPrice" />
    <result column="static_pe" jdbcType="DOUBLE" property="staticPe" />
    <result column="dynamic_pe" jdbcType="DOUBLE" property="dynamicPe" />
    <result column="up_down_close" jdbcType="DOUBLE" property="upDownClose" />
    <result column="up_down_last" jdbcType="DOUBLE" property="upDownLast" />
    <result column="open_interest" jdbcType="DOUBLE" property="openInterest" />
    <result column="sell_price_10" jdbcType="DOUBLE" property="sellPrice10" />
    <result column="sell_volumn_10" jdbcType="DOUBLE" property="sellVolumn10" />
    <result column="sell_price_9" jdbcType="DOUBLE" property="sellPrice9" />
    <result column="sell_volumn_9" jdbcType="DOUBLE" property="sellVolumn9" />
    <result column="sell_price_8" jdbcType="DOUBLE" property="sellPrice8" />
    <result column="sell_volumn_8" jdbcType="DOUBLE" property="sellVolumn8" />
    <result column="sell_price_7" jdbcType="DOUBLE" property="sellPrice7" />
    <result column="sell_volumn_7" jdbcType="DOUBLE" property="sellVolumn7" />
    <result column="sell_price_6" jdbcType="DOUBLE" property="sellPrice6" />
    <result column="sell_volumn_6" jdbcType="DOUBLE" property="sellVolumn6" />
    <result column="sell_price_5" jdbcType="DOUBLE" property="sellPrice5" />
    <result column="sell_volumn_5" jdbcType="DOUBLE" property="sellVolumn5" />
    <result column="sell_price_4" jdbcType="DOUBLE" property="sellPrice4" />
    <result column="sell_volumn_4" jdbcType="DOUBLE" property="sellVolumn4" />
    <result column="sell_price_3" jdbcType="DOUBLE" property="sellPrice3" />
    <result column="sell_volumn_3" jdbcType="DOUBLE" property="sellVolumn3" />
    <result column="sell_price_2" jdbcType="DOUBLE" property="sellPrice2" />
    <result column="sell_volumn_2" jdbcType="DOUBLE" property="sellVolumn2" />
    <result column="sell_price_1" jdbcType="DOUBLE" property="sellPrice1" />
    <result column="sell_volumn_1" jdbcType="DOUBLE" property="sellVolumn1" />
    <result column="buy_price_1" jdbcType="DOUBLE" property="buyPrice1" />
    <result column="buy_volumn_1" jdbcType="DOUBLE" property="buyVolumn1" />
    <result column="buy_price_2" jdbcType="DOUBLE" property="buyPrice2" />
    <result column="buy_volumn_2" jdbcType="DOUBLE" property="buyVolumn2" />
    <result column="buy_price_3" jdbcType="DOUBLE" property="buyPrice3" />
    <result column="buy_volumn_3" jdbcType="DOUBLE" property="buyVolumn3" />
    <result column="buy_price_4" jdbcType="DOUBLE" property="buyPrice4" />
    <result column="buy_volumn_4" jdbcType="DOUBLE" property="buyVolumn4" />
    <result column="buy_price_5" jdbcType="DOUBLE" property="buyPrice5" />
    <result column="buy_volumn_5" jdbcType="DOUBLE" property="buyVolumn5" />
    <result column="buy_price_6" jdbcType="DOUBLE" property="buyPrice6" />
    <result column="buy_volumn_6" jdbcType="DOUBLE" property="buyVolumn6" />
    <result column="buy_price_7" jdbcType="DOUBLE" property="buyPrice7" />
    <result column="buy_volumn_7" jdbcType="DOUBLE" property="buyVolumn7" />
    <result column="buy_price_8" jdbcType="DOUBLE" property="buyPrice8" />
    <result column="buy_volumn_8" jdbcType="DOUBLE" property="buyVolumn8" />
    <result column="buy_price_9" jdbcType="DOUBLE" property="buyPrice9" />
    <result column="buy_volumn_9" jdbcType="DOUBLE" property="buyVolumn9" />
    <result column="buy_price_10" jdbcType="DOUBLE" property="buyPrice10" />
    <result column="buy_volumn_10" jdbcType="DOUBLE" property="buyVolumn10" />
    <result column="up_down_rate_close" jdbcType="DOUBLE" property="upDownRateClose" />
    <result column="pe_rate" jdbcType="DOUBLE" property="peRate" />
    <result column="trans_rate" jdbcType="DOUBLE" property="transRate" />
    <result column="pb_rate" jdbcType="DOUBLE" property="pbRate" />
    <result column="market_value" jdbcType="DOUBLE" property="marketValue" />
    <result column="avarage_price" jdbcType="DOUBLE" property="avaragePrice" />
    <result column="total_value" jdbcType="DOUBLE" property="totalValue" />
    <result column="change_range_rate" jdbcType="DOUBLE" property="changeRangeRate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    id, `date`, `time`, stock_id, stock_code, shortname, previous_price, open_price, 
    current_price, deal_volumn, deal_sum, deal_num, max_price, min_price, static_pe, 
    dynamic_pe, up_down_close, up_down_last, open_interest, sell_price_10, sell_volumn_10, 
    sell_price_9, sell_volumn_9, sell_price_8, sell_volumn_8, sell_price_7, sell_volumn_7, 
    sell_price_6, sell_volumn_6, sell_price_5, sell_volumn_5, sell_price_4, sell_volumn_4, 
    sell_price_3, sell_volumn_3, sell_price_2, sell_volumn_2, sell_price_1, sell_volumn_1, 
    buy_price_1, buy_volumn_1, buy_price_2, buy_volumn_2, buy_price_3, buy_volumn_3, 
    buy_price_4, buy_volumn_4, buy_price_5, buy_volumn_5, buy_price_6, buy_volumn_6, 
    buy_price_7, buy_volumn_7, buy_price_8, buy_volumn_8, buy_price_9, buy_volumn_9, 
    buy_price_10, buy_volumn_10, up_down_rate_close, pe_rate, trans_rate, pb_rate, market_value, 
    avarage_price, total_value, change_range_rate
  </sql>
  <select id="selectByExample" parameterType="com.kf.data.mybatis.entity.online.NeeqHistoryQuotationOnlineExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from neeq_history_quotation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from neeq_history_quotation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    delete from neeq_history_quotation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kf.data.mybatis.entity.online.NeeqHistoryQuotationOnlineExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    delete from neeq_history_quotation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kf.data.mybatis.entity.online.NeeqHistoryQuotationOnline">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into neeq_history_quotation (`date`, `time`, stock_id, 
      stock_code, shortname, previous_price, 
      open_price, current_price, deal_volumn, 
      deal_sum, deal_num, max_price, 
      min_price, static_pe, dynamic_pe, 
      up_down_close, up_down_last, open_interest, 
      sell_price_10, sell_volumn_10, sell_price_9, 
      sell_volumn_9, sell_price_8, sell_volumn_8, 
      sell_price_7, sell_volumn_7, sell_price_6, 
      sell_volumn_6, sell_price_5, sell_volumn_5, 
      sell_price_4, sell_volumn_4, sell_price_3, 
      sell_volumn_3, sell_price_2, sell_volumn_2, 
      sell_price_1, sell_volumn_1, buy_price_1, 
      buy_volumn_1, buy_price_2, buy_volumn_2, 
      buy_price_3, buy_volumn_3, buy_price_4, 
      buy_volumn_4, buy_price_5, buy_volumn_5, 
      buy_price_6, buy_volumn_6, buy_price_7, 
      buy_volumn_7, buy_price_8, buy_volumn_8, 
      buy_price_9, buy_volumn_9, buy_price_10, 
      buy_volumn_10, up_down_rate_close, pe_rate, 
      trans_rate, pb_rate, market_value, 
      avarage_price, total_value, change_range_rate
      )
    values (#{date,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, #{stockId,jdbcType=VARCHAR}, 
      #{stockCode,jdbcType=VARCHAR}, #{shortname,jdbcType=VARCHAR}, #{previousPrice,jdbcType=DOUBLE}, 
      #{openPrice,jdbcType=DOUBLE}, #{currentPrice,jdbcType=DOUBLE}, #{dealVolumn,jdbcType=DOUBLE}, 
      #{dealSum,jdbcType=DOUBLE}, #{dealNum,jdbcType=DOUBLE}, #{maxPrice,jdbcType=DOUBLE}, 
      #{minPrice,jdbcType=DOUBLE}, #{staticPe,jdbcType=DOUBLE}, #{dynamicPe,jdbcType=DOUBLE}, 
      #{upDownClose,jdbcType=DOUBLE}, #{upDownLast,jdbcType=DOUBLE}, #{openInterest,jdbcType=DOUBLE}, 
      #{sellPrice10,jdbcType=DOUBLE}, #{sellVolumn10,jdbcType=DOUBLE}, #{sellPrice9,jdbcType=DOUBLE}, 
      #{sellVolumn9,jdbcType=DOUBLE}, #{sellPrice8,jdbcType=DOUBLE}, #{sellVolumn8,jdbcType=DOUBLE}, 
      #{sellPrice7,jdbcType=DOUBLE}, #{sellVolumn7,jdbcType=DOUBLE}, #{sellPrice6,jdbcType=DOUBLE}, 
      #{sellVolumn6,jdbcType=DOUBLE}, #{sellPrice5,jdbcType=DOUBLE}, #{sellVolumn5,jdbcType=DOUBLE}, 
      #{sellPrice4,jdbcType=DOUBLE}, #{sellVolumn4,jdbcType=DOUBLE}, #{sellPrice3,jdbcType=DOUBLE}, 
      #{sellVolumn3,jdbcType=DOUBLE}, #{sellPrice2,jdbcType=DOUBLE}, #{sellVolumn2,jdbcType=DOUBLE}, 
      #{sellPrice1,jdbcType=DOUBLE}, #{sellVolumn1,jdbcType=DOUBLE}, #{buyPrice1,jdbcType=DOUBLE}, 
      #{buyVolumn1,jdbcType=DOUBLE}, #{buyPrice2,jdbcType=DOUBLE}, #{buyVolumn2,jdbcType=DOUBLE}, 
      #{buyPrice3,jdbcType=DOUBLE}, #{buyVolumn3,jdbcType=DOUBLE}, #{buyPrice4,jdbcType=DOUBLE}, 
      #{buyVolumn4,jdbcType=DOUBLE}, #{buyPrice5,jdbcType=DOUBLE}, #{buyVolumn5,jdbcType=DOUBLE}, 
      #{buyPrice6,jdbcType=DOUBLE}, #{buyVolumn6,jdbcType=DOUBLE}, #{buyPrice7,jdbcType=DOUBLE}, 
      #{buyVolumn7,jdbcType=DOUBLE}, #{buyPrice8,jdbcType=DOUBLE}, #{buyVolumn8,jdbcType=DOUBLE}, 
      #{buyPrice9,jdbcType=DOUBLE}, #{buyVolumn9,jdbcType=DOUBLE}, #{buyPrice10,jdbcType=DOUBLE}, 
      #{buyVolumn10,jdbcType=DOUBLE}, #{upDownRateClose,jdbcType=DOUBLE}, #{peRate,jdbcType=DOUBLE}, 
      #{transRate,jdbcType=DOUBLE}, #{pbRate,jdbcType=DOUBLE}, #{marketValue,jdbcType=DOUBLE}, 
      #{avaragePrice,jdbcType=DOUBLE}, #{totalValue,jdbcType=DOUBLE}, #{changeRangeRate,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kf.data.mybatis.entity.online.NeeqHistoryQuotationOnline">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into neeq_history_quotation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="date != null">
        `date`,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="stockId != null">
        stock_id,
      </if>
      <if test="stockCode != null">
        stock_code,
      </if>
      <if test="shortname != null">
        shortname,
      </if>
      <if test="previousPrice != null">
        previous_price,
      </if>
      <if test="openPrice != null">
        open_price,
      </if>
      <if test="currentPrice != null">
        current_price,
      </if>
      <if test="dealVolumn != null">
        deal_volumn,
      </if>
      <if test="dealSum != null">
        deal_sum,
      </if>
      <if test="dealNum != null">
        deal_num,
      </if>
      <if test="maxPrice != null">
        max_price,
      </if>
      <if test="minPrice != null">
        min_price,
      </if>
      <if test="staticPe != null">
        static_pe,
      </if>
      <if test="dynamicPe != null">
        dynamic_pe,
      </if>
      <if test="upDownClose != null">
        up_down_close,
      </if>
      <if test="upDownLast != null">
        up_down_last,
      </if>
      <if test="openInterest != null">
        open_interest,
      </if>
      <if test="sellPrice10 != null">
        sell_price_10,
      </if>
      <if test="sellVolumn10 != null">
        sell_volumn_10,
      </if>
      <if test="sellPrice9 != null">
        sell_price_9,
      </if>
      <if test="sellVolumn9 != null">
        sell_volumn_9,
      </if>
      <if test="sellPrice8 != null">
        sell_price_8,
      </if>
      <if test="sellVolumn8 != null">
        sell_volumn_8,
      </if>
      <if test="sellPrice7 != null">
        sell_price_7,
      </if>
      <if test="sellVolumn7 != null">
        sell_volumn_7,
      </if>
      <if test="sellPrice6 != null">
        sell_price_6,
      </if>
      <if test="sellVolumn6 != null">
        sell_volumn_6,
      </if>
      <if test="sellPrice5 != null">
        sell_price_5,
      </if>
      <if test="sellVolumn5 != null">
        sell_volumn_5,
      </if>
      <if test="sellPrice4 != null">
        sell_price_4,
      </if>
      <if test="sellVolumn4 != null">
        sell_volumn_4,
      </if>
      <if test="sellPrice3 != null">
        sell_price_3,
      </if>
      <if test="sellVolumn3 != null">
        sell_volumn_3,
      </if>
      <if test="sellPrice2 != null">
        sell_price_2,
      </if>
      <if test="sellVolumn2 != null">
        sell_volumn_2,
      </if>
      <if test="sellPrice1 != null">
        sell_price_1,
      </if>
      <if test="sellVolumn1 != null">
        sell_volumn_1,
      </if>
      <if test="buyPrice1 != null">
        buy_price_1,
      </if>
      <if test="buyVolumn1 != null">
        buy_volumn_1,
      </if>
      <if test="buyPrice2 != null">
        buy_price_2,
      </if>
      <if test="buyVolumn2 != null">
        buy_volumn_2,
      </if>
      <if test="buyPrice3 != null">
        buy_price_3,
      </if>
      <if test="buyVolumn3 != null">
        buy_volumn_3,
      </if>
      <if test="buyPrice4 != null">
        buy_price_4,
      </if>
      <if test="buyVolumn4 != null">
        buy_volumn_4,
      </if>
      <if test="buyPrice5 != null">
        buy_price_5,
      </if>
      <if test="buyVolumn5 != null">
        buy_volumn_5,
      </if>
      <if test="buyPrice6 != null">
        buy_price_6,
      </if>
      <if test="buyVolumn6 != null">
        buy_volumn_6,
      </if>
      <if test="buyPrice7 != null">
        buy_price_7,
      </if>
      <if test="buyVolumn7 != null">
        buy_volumn_7,
      </if>
      <if test="buyPrice8 != null">
        buy_price_8,
      </if>
      <if test="buyVolumn8 != null">
        buy_volumn_8,
      </if>
      <if test="buyPrice9 != null">
        buy_price_9,
      </if>
      <if test="buyVolumn9 != null">
        buy_volumn_9,
      </if>
      <if test="buyPrice10 != null">
        buy_price_10,
      </if>
      <if test="buyVolumn10 != null">
        buy_volumn_10,
      </if>
      <if test="upDownRateClose != null">
        up_down_rate_close,
      </if>
      <if test="peRate != null">
        pe_rate,
      </if>
      <if test="transRate != null">
        trans_rate,
      </if>
      <if test="pbRate != null">
        pb_rate,
      </if>
      <if test="marketValue != null">
        market_value,
      </if>
      <if test="avaragePrice != null">
        avarage_price,
      </if>
      <if test="totalValue != null">
        total_value,
      </if>
      <if test="changeRangeRate != null">
        change_range_rate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null">
        #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="shortname != null">
        #{shortname,jdbcType=VARCHAR},
      </if>
      <if test="previousPrice != null">
        #{previousPrice,jdbcType=DOUBLE},
      </if>
      <if test="openPrice != null">
        #{openPrice,jdbcType=DOUBLE},
      </if>
      <if test="currentPrice != null">
        #{currentPrice,jdbcType=DOUBLE},
      </if>
      <if test="dealVolumn != null">
        #{dealVolumn,jdbcType=DOUBLE},
      </if>
      <if test="dealSum != null">
        #{dealSum,jdbcType=DOUBLE},
      </if>
      <if test="dealNum != null">
        #{dealNum,jdbcType=DOUBLE},
      </if>
      <if test="maxPrice != null">
        #{maxPrice,jdbcType=DOUBLE},
      </if>
      <if test="minPrice != null">
        #{minPrice,jdbcType=DOUBLE},
      </if>
      <if test="staticPe != null">
        #{staticPe,jdbcType=DOUBLE},
      </if>
      <if test="dynamicPe != null">
        #{dynamicPe,jdbcType=DOUBLE},
      </if>
      <if test="upDownClose != null">
        #{upDownClose,jdbcType=DOUBLE},
      </if>
      <if test="upDownLast != null">
        #{upDownLast,jdbcType=DOUBLE},
      </if>
      <if test="openInterest != null">
        #{openInterest,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice10 != null">
        #{sellPrice10,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn10 != null">
        #{sellVolumn10,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice9 != null">
        #{sellPrice9,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn9 != null">
        #{sellVolumn9,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice8 != null">
        #{sellPrice8,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn8 != null">
        #{sellVolumn8,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice7 != null">
        #{sellPrice7,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn7 != null">
        #{sellVolumn7,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice6 != null">
        #{sellPrice6,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn6 != null">
        #{sellVolumn6,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice5 != null">
        #{sellPrice5,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn5 != null">
        #{sellVolumn5,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice4 != null">
        #{sellPrice4,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn4 != null">
        #{sellVolumn4,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice3 != null">
        #{sellPrice3,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn3 != null">
        #{sellVolumn3,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice2 != null">
        #{sellPrice2,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn2 != null">
        #{sellVolumn2,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice1 != null">
        #{sellPrice1,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn1 != null">
        #{sellVolumn1,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice1 != null">
        #{buyPrice1,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn1 != null">
        #{buyVolumn1,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice2 != null">
        #{buyPrice2,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn2 != null">
        #{buyVolumn2,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice3 != null">
        #{buyPrice3,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn3 != null">
        #{buyVolumn3,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice4 != null">
        #{buyPrice4,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn4 != null">
        #{buyVolumn4,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice5 != null">
        #{buyPrice5,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn5 != null">
        #{buyVolumn5,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice6 != null">
        #{buyPrice6,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn6 != null">
        #{buyVolumn6,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice7 != null">
        #{buyPrice7,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn7 != null">
        #{buyVolumn7,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice8 != null">
        #{buyPrice8,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn8 != null">
        #{buyVolumn8,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice9 != null">
        #{buyPrice9,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn9 != null">
        #{buyVolumn9,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice10 != null">
        #{buyPrice10,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn10 != null">
        #{buyVolumn10,jdbcType=DOUBLE},
      </if>
      <if test="upDownRateClose != null">
        #{upDownRateClose,jdbcType=DOUBLE},
      </if>
      <if test="peRate != null">
        #{peRate,jdbcType=DOUBLE},
      </if>
      <if test="transRate != null">
        #{transRate,jdbcType=DOUBLE},
      </if>
      <if test="pbRate != null">
        #{pbRate,jdbcType=DOUBLE},
      </if>
      <if test="marketValue != null">
        #{marketValue,jdbcType=DOUBLE},
      </if>
      <if test="avaragePrice != null">
        #{avaragePrice,jdbcType=DOUBLE},
      </if>
      <if test="totalValue != null">
        #{totalValue,jdbcType=DOUBLE},
      </if>
      <if test="changeRangeRate != null">
        #{changeRangeRate,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kf.data.mybatis.entity.online.NeeqHistoryQuotationOnlineExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    select count(*) from neeq_history_quotation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    update neeq_history_quotation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        `date` = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        `time` = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.stockId != null">
        stock_id = #{record.stockId,jdbcType=VARCHAR},
      </if>
      <if test="record.stockCode != null">
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shortname != null">
        shortname = #{record.shortname,jdbcType=VARCHAR},
      </if>
      <if test="record.previousPrice != null">
        previous_price = #{record.previousPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.openPrice != null">
        open_price = #{record.openPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.currentPrice != null">
        current_price = #{record.currentPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.dealVolumn != null">
        deal_volumn = #{record.dealVolumn,jdbcType=DOUBLE},
      </if>
      <if test="record.dealSum != null">
        deal_sum = #{record.dealSum,jdbcType=DOUBLE},
      </if>
      <if test="record.dealNum != null">
        deal_num = #{record.dealNum,jdbcType=DOUBLE},
      </if>
      <if test="record.maxPrice != null">
        max_price = #{record.maxPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.minPrice != null">
        min_price = #{record.minPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.staticPe != null">
        static_pe = #{record.staticPe,jdbcType=DOUBLE},
      </if>
      <if test="record.dynamicPe != null">
        dynamic_pe = #{record.dynamicPe,jdbcType=DOUBLE},
      </if>
      <if test="record.upDownClose != null">
        up_down_close = #{record.upDownClose,jdbcType=DOUBLE},
      </if>
      <if test="record.upDownLast != null">
        up_down_last = #{record.upDownLast,jdbcType=DOUBLE},
      </if>
      <if test="record.openInterest != null">
        open_interest = #{record.openInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice10 != null">
        sell_price_10 = #{record.sellPrice10,jdbcType=DOUBLE},
      </if>
      <if test="record.sellVolumn10 != null">
        sell_volumn_10 = #{record.sellVolumn10,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice9 != null">
        sell_price_9 = #{record.sellPrice9,jdbcType=DOUBLE},
      </if>
      <if test="record.sellVolumn9 != null">
        sell_volumn_9 = #{record.sellVolumn9,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice8 != null">
        sell_price_8 = #{record.sellPrice8,jdbcType=DOUBLE},
      </if>
      <if test="record.sellVolumn8 != null">
        sell_volumn_8 = #{record.sellVolumn8,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice7 != null">
        sell_price_7 = #{record.sellPrice7,jdbcType=DOUBLE},
      </if>
      <if test="record.sellVolumn7 != null">
        sell_volumn_7 = #{record.sellVolumn7,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice6 != null">
        sell_price_6 = #{record.sellPrice6,jdbcType=DOUBLE},
      </if>
      <if test="record.sellVolumn6 != null">
        sell_volumn_6 = #{record.sellVolumn6,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice5 != null">
        sell_price_5 = #{record.sellPrice5,jdbcType=DOUBLE},
      </if>
      <if test="record.sellVolumn5 != null">
        sell_volumn_5 = #{record.sellVolumn5,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice4 != null">
        sell_price_4 = #{record.sellPrice4,jdbcType=DOUBLE},
      </if>
      <if test="record.sellVolumn4 != null">
        sell_volumn_4 = #{record.sellVolumn4,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice3 != null">
        sell_price_3 = #{record.sellPrice3,jdbcType=DOUBLE},
      </if>
      <if test="record.sellVolumn3 != null">
        sell_volumn_3 = #{record.sellVolumn3,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice2 != null">
        sell_price_2 = #{record.sellPrice2,jdbcType=DOUBLE},
      </if>
      <if test="record.sellVolumn2 != null">
        sell_volumn_2 = #{record.sellVolumn2,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice1 != null">
        sell_price_1 = #{record.sellPrice1,jdbcType=DOUBLE},
      </if>
      <if test="record.sellVolumn1 != null">
        sell_volumn_1 = #{record.sellVolumn1,jdbcType=DOUBLE},
      </if>
      <if test="record.buyPrice1 != null">
        buy_price_1 = #{record.buyPrice1,jdbcType=DOUBLE},
      </if>
      <if test="record.buyVolumn1 != null">
        buy_volumn_1 = #{record.buyVolumn1,jdbcType=DOUBLE},
      </if>
      <if test="record.buyPrice2 != null">
        buy_price_2 = #{record.buyPrice2,jdbcType=DOUBLE},
      </if>
      <if test="record.buyVolumn2 != null">
        buy_volumn_2 = #{record.buyVolumn2,jdbcType=DOUBLE},
      </if>
      <if test="record.buyPrice3 != null">
        buy_price_3 = #{record.buyPrice3,jdbcType=DOUBLE},
      </if>
      <if test="record.buyVolumn3 != null">
        buy_volumn_3 = #{record.buyVolumn3,jdbcType=DOUBLE},
      </if>
      <if test="record.buyPrice4 != null">
        buy_price_4 = #{record.buyPrice4,jdbcType=DOUBLE},
      </if>
      <if test="record.buyVolumn4 != null">
        buy_volumn_4 = #{record.buyVolumn4,jdbcType=DOUBLE},
      </if>
      <if test="record.buyPrice5 != null">
        buy_price_5 = #{record.buyPrice5,jdbcType=DOUBLE},
      </if>
      <if test="record.buyVolumn5 != null">
        buy_volumn_5 = #{record.buyVolumn5,jdbcType=DOUBLE},
      </if>
      <if test="record.buyPrice6 != null">
        buy_price_6 = #{record.buyPrice6,jdbcType=DOUBLE},
      </if>
      <if test="record.buyVolumn6 != null">
        buy_volumn_6 = #{record.buyVolumn6,jdbcType=DOUBLE},
      </if>
      <if test="record.buyPrice7 != null">
        buy_price_7 = #{record.buyPrice7,jdbcType=DOUBLE},
      </if>
      <if test="record.buyVolumn7 != null">
        buy_volumn_7 = #{record.buyVolumn7,jdbcType=DOUBLE},
      </if>
      <if test="record.buyPrice8 != null">
        buy_price_8 = #{record.buyPrice8,jdbcType=DOUBLE},
      </if>
      <if test="record.buyVolumn8 != null">
        buy_volumn_8 = #{record.buyVolumn8,jdbcType=DOUBLE},
      </if>
      <if test="record.buyPrice9 != null">
        buy_price_9 = #{record.buyPrice9,jdbcType=DOUBLE},
      </if>
      <if test="record.buyVolumn9 != null">
        buy_volumn_9 = #{record.buyVolumn9,jdbcType=DOUBLE},
      </if>
      <if test="record.buyPrice10 != null">
        buy_price_10 = #{record.buyPrice10,jdbcType=DOUBLE},
      </if>
      <if test="record.buyVolumn10 != null">
        buy_volumn_10 = #{record.buyVolumn10,jdbcType=DOUBLE},
      </if>
      <if test="record.upDownRateClose != null">
        up_down_rate_close = #{record.upDownRateClose,jdbcType=DOUBLE},
      </if>
      <if test="record.peRate != null">
        pe_rate = #{record.peRate,jdbcType=DOUBLE},
      </if>
      <if test="record.transRate != null">
        trans_rate = #{record.transRate,jdbcType=DOUBLE},
      </if>
      <if test="record.pbRate != null">
        pb_rate = #{record.pbRate,jdbcType=DOUBLE},
      </if>
      <if test="record.marketValue != null">
        market_value = #{record.marketValue,jdbcType=DOUBLE},
      </if>
      <if test="record.avaragePrice != null">
        avarage_price = #{record.avaragePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.totalValue != null">
        total_value = #{record.totalValue,jdbcType=DOUBLE},
      </if>
      <if test="record.changeRangeRate != null">
        change_range_rate = #{record.changeRangeRate,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    update neeq_history_quotation
    set id = #{record.id,jdbcType=INTEGER},
      `date` = #{record.date,jdbcType=VARCHAR},
      `time` = #{record.time,jdbcType=VARCHAR},
      stock_id = #{record.stockId,jdbcType=VARCHAR},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      shortname = #{record.shortname,jdbcType=VARCHAR},
      previous_price = #{record.previousPrice,jdbcType=DOUBLE},
      open_price = #{record.openPrice,jdbcType=DOUBLE},
      current_price = #{record.currentPrice,jdbcType=DOUBLE},
      deal_volumn = #{record.dealVolumn,jdbcType=DOUBLE},
      deal_sum = #{record.dealSum,jdbcType=DOUBLE},
      deal_num = #{record.dealNum,jdbcType=DOUBLE},
      max_price = #{record.maxPrice,jdbcType=DOUBLE},
      min_price = #{record.minPrice,jdbcType=DOUBLE},
      static_pe = #{record.staticPe,jdbcType=DOUBLE},
      dynamic_pe = #{record.dynamicPe,jdbcType=DOUBLE},
      up_down_close = #{record.upDownClose,jdbcType=DOUBLE},
      up_down_last = #{record.upDownLast,jdbcType=DOUBLE},
      open_interest = #{record.openInterest,jdbcType=DOUBLE},
      sell_price_10 = #{record.sellPrice10,jdbcType=DOUBLE},
      sell_volumn_10 = #{record.sellVolumn10,jdbcType=DOUBLE},
      sell_price_9 = #{record.sellPrice9,jdbcType=DOUBLE},
      sell_volumn_9 = #{record.sellVolumn9,jdbcType=DOUBLE},
      sell_price_8 = #{record.sellPrice8,jdbcType=DOUBLE},
      sell_volumn_8 = #{record.sellVolumn8,jdbcType=DOUBLE},
      sell_price_7 = #{record.sellPrice7,jdbcType=DOUBLE},
      sell_volumn_7 = #{record.sellVolumn7,jdbcType=DOUBLE},
      sell_price_6 = #{record.sellPrice6,jdbcType=DOUBLE},
      sell_volumn_6 = #{record.sellVolumn6,jdbcType=DOUBLE},
      sell_price_5 = #{record.sellPrice5,jdbcType=DOUBLE},
      sell_volumn_5 = #{record.sellVolumn5,jdbcType=DOUBLE},
      sell_price_4 = #{record.sellPrice4,jdbcType=DOUBLE},
      sell_volumn_4 = #{record.sellVolumn4,jdbcType=DOUBLE},
      sell_price_3 = #{record.sellPrice3,jdbcType=DOUBLE},
      sell_volumn_3 = #{record.sellVolumn3,jdbcType=DOUBLE},
      sell_price_2 = #{record.sellPrice2,jdbcType=DOUBLE},
      sell_volumn_2 = #{record.sellVolumn2,jdbcType=DOUBLE},
      sell_price_1 = #{record.sellPrice1,jdbcType=DOUBLE},
      sell_volumn_1 = #{record.sellVolumn1,jdbcType=DOUBLE},
      buy_price_1 = #{record.buyPrice1,jdbcType=DOUBLE},
      buy_volumn_1 = #{record.buyVolumn1,jdbcType=DOUBLE},
      buy_price_2 = #{record.buyPrice2,jdbcType=DOUBLE},
      buy_volumn_2 = #{record.buyVolumn2,jdbcType=DOUBLE},
      buy_price_3 = #{record.buyPrice3,jdbcType=DOUBLE},
      buy_volumn_3 = #{record.buyVolumn3,jdbcType=DOUBLE},
      buy_price_4 = #{record.buyPrice4,jdbcType=DOUBLE},
      buy_volumn_4 = #{record.buyVolumn4,jdbcType=DOUBLE},
      buy_price_5 = #{record.buyPrice5,jdbcType=DOUBLE},
      buy_volumn_5 = #{record.buyVolumn5,jdbcType=DOUBLE},
      buy_price_6 = #{record.buyPrice6,jdbcType=DOUBLE},
      buy_volumn_6 = #{record.buyVolumn6,jdbcType=DOUBLE},
      buy_price_7 = #{record.buyPrice7,jdbcType=DOUBLE},
      buy_volumn_7 = #{record.buyVolumn7,jdbcType=DOUBLE},
      buy_price_8 = #{record.buyPrice8,jdbcType=DOUBLE},
      buy_volumn_8 = #{record.buyVolumn8,jdbcType=DOUBLE},
      buy_price_9 = #{record.buyPrice9,jdbcType=DOUBLE},
      buy_volumn_9 = #{record.buyVolumn9,jdbcType=DOUBLE},
      buy_price_10 = #{record.buyPrice10,jdbcType=DOUBLE},
      buy_volumn_10 = #{record.buyVolumn10,jdbcType=DOUBLE},
      up_down_rate_close = #{record.upDownRateClose,jdbcType=DOUBLE},
      pe_rate = #{record.peRate,jdbcType=DOUBLE},
      trans_rate = #{record.transRate,jdbcType=DOUBLE},
      pb_rate = #{record.pbRate,jdbcType=DOUBLE},
      market_value = #{record.marketValue,jdbcType=DOUBLE},
      avarage_price = #{record.avaragePrice,jdbcType=DOUBLE},
      total_value = #{record.totalValue,jdbcType=DOUBLE},
      change_range_rate = #{record.changeRangeRate,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kf.data.mybatis.entity.online.NeeqHistoryQuotationOnline">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    update neeq_history_quotation
    <set>
      <if test="date != null">
        `date` = #{date,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null">
        stock_id = #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="shortname != null">
        shortname = #{shortname,jdbcType=VARCHAR},
      </if>
      <if test="previousPrice != null">
        previous_price = #{previousPrice,jdbcType=DOUBLE},
      </if>
      <if test="openPrice != null">
        open_price = #{openPrice,jdbcType=DOUBLE},
      </if>
      <if test="currentPrice != null">
        current_price = #{currentPrice,jdbcType=DOUBLE},
      </if>
      <if test="dealVolumn != null">
        deal_volumn = #{dealVolumn,jdbcType=DOUBLE},
      </if>
      <if test="dealSum != null">
        deal_sum = #{dealSum,jdbcType=DOUBLE},
      </if>
      <if test="dealNum != null">
        deal_num = #{dealNum,jdbcType=DOUBLE},
      </if>
      <if test="maxPrice != null">
        max_price = #{maxPrice,jdbcType=DOUBLE},
      </if>
      <if test="minPrice != null">
        min_price = #{minPrice,jdbcType=DOUBLE},
      </if>
      <if test="staticPe != null">
        static_pe = #{staticPe,jdbcType=DOUBLE},
      </if>
      <if test="dynamicPe != null">
        dynamic_pe = #{dynamicPe,jdbcType=DOUBLE},
      </if>
      <if test="upDownClose != null">
        up_down_close = #{upDownClose,jdbcType=DOUBLE},
      </if>
      <if test="upDownLast != null">
        up_down_last = #{upDownLast,jdbcType=DOUBLE},
      </if>
      <if test="openInterest != null">
        open_interest = #{openInterest,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice10 != null">
        sell_price_10 = #{sellPrice10,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn10 != null">
        sell_volumn_10 = #{sellVolumn10,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice9 != null">
        sell_price_9 = #{sellPrice9,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn9 != null">
        sell_volumn_9 = #{sellVolumn9,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice8 != null">
        sell_price_8 = #{sellPrice8,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn8 != null">
        sell_volumn_8 = #{sellVolumn8,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice7 != null">
        sell_price_7 = #{sellPrice7,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn7 != null">
        sell_volumn_7 = #{sellVolumn7,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice6 != null">
        sell_price_6 = #{sellPrice6,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn6 != null">
        sell_volumn_6 = #{sellVolumn6,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice5 != null">
        sell_price_5 = #{sellPrice5,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn5 != null">
        sell_volumn_5 = #{sellVolumn5,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice4 != null">
        sell_price_4 = #{sellPrice4,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn4 != null">
        sell_volumn_4 = #{sellVolumn4,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice3 != null">
        sell_price_3 = #{sellPrice3,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn3 != null">
        sell_volumn_3 = #{sellVolumn3,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice2 != null">
        sell_price_2 = #{sellPrice2,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn2 != null">
        sell_volumn_2 = #{sellVolumn2,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice1 != null">
        sell_price_1 = #{sellPrice1,jdbcType=DOUBLE},
      </if>
      <if test="sellVolumn1 != null">
        sell_volumn_1 = #{sellVolumn1,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice1 != null">
        buy_price_1 = #{buyPrice1,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn1 != null">
        buy_volumn_1 = #{buyVolumn1,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice2 != null">
        buy_price_2 = #{buyPrice2,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn2 != null">
        buy_volumn_2 = #{buyVolumn2,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice3 != null">
        buy_price_3 = #{buyPrice3,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn3 != null">
        buy_volumn_3 = #{buyVolumn3,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice4 != null">
        buy_price_4 = #{buyPrice4,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn4 != null">
        buy_volumn_4 = #{buyVolumn4,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice5 != null">
        buy_price_5 = #{buyPrice5,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn5 != null">
        buy_volumn_5 = #{buyVolumn5,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice6 != null">
        buy_price_6 = #{buyPrice6,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn6 != null">
        buy_volumn_6 = #{buyVolumn6,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice7 != null">
        buy_price_7 = #{buyPrice7,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn7 != null">
        buy_volumn_7 = #{buyVolumn7,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice8 != null">
        buy_price_8 = #{buyPrice8,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn8 != null">
        buy_volumn_8 = #{buyVolumn8,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice9 != null">
        buy_price_9 = #{buyPrice9,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn9 != null">
        buy_volumn_9 = #{buyVolumn9,jdbcType=DOUBLE},
      </if>
      <if test="buyPrice10 != null">
        buy_price_10 = #{buyPrice10,jdbcType=DOUBLE},
      </if>
      <if test="buyVolumn10 != null">
        buy_volumn_10 = #{buyVolumn10,jdbcType=DOUBLE},
      </if>
      <if test="upDownRateClose != null">
        up_down_rate_close = #{upDownRateClose,jdbcType=DOUBLE},
      </if>
      <if test="peRate != null">
        pe_rate = #{peRate,jdbcType=DOUBLE},
      </if>
      <if test="transRate != null">
        trans_rate = #{transRate,jdbcType=DOUBLE},
      </if>
      <if test="pbRate != null">
        pb_rate = #{pbRate,jdbcType=DOUBLE},
      </if>
      <if test="marketValue != null">
        market_value = #{marketValue,jdbcType=DOUBLE},
      </if>
      <if test="avaragePrice != null">
        avarage_price = #{avaragePrice,jdbcType=DOUBLE},
      </if>
      <if test="totalValue != null">
        total_value = #{totalValue,jdbcType=DOUBLE},
      </if>
      <if test="changeRangeRate != null">
        change_range_rate = #{changeRangeRate,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kf.data.mybatis.entity.online.NeeqHistoryQuotationOnline">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 22 16:38:16 CST 2018.
    -->
    update neeq_history_quotation
    set `date` = #{date,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=VARCHAR},
      stock_id = #{stockId,jdbcType=VARCHAR},
      stock_code = #{stockCode,jdbcType=VARCHAR},
      shortname = #{shortname,jdbcType=VARCHAR},
      previous_price = #{previousPrice,jdbcType=DOUBLE},
      open_price = #{openPrice,jdbcType=DOUBLE},
      current_price = #{currentPrice,jdbcType=DOUBLE},
      deal_volumn = #{dealVolumn,jdbcType=DOUBLE},
      deal_sum = #{dealSum,jdbcType=DOUBLE},
      deal_num = #{dealNum,jdbcType=DOUBLE},
      max_price = #{maxPrice,jdbcType=DOUBLE},
      min_price = #{minPrice,jdbcType=DOUBLE},
      static_pe = #{staticPe,jdbcType=DOUBLE},
      dynamic_pe = #{dynamicPe,jdbcType=DOUBLE},
      up_down_close = #{upDownClose,jdbcType=DOUBLE},
      up_down_last = #{upDownLast,jdbcType=DOUBLE},
      open_interest = #{openInterest,jdbcType=DOUBLE},
      sell_price_10 = #{sellPrice10,jdbcType=DOUBLE},
      sell_volumn_10 = #{sellVolumn10,jdbcType=DOUBLE},
      sell_price_9 = #{sellPrice9,jdbcType=DOUBLE},
      sell_volumn_9 = #{sellVolumn9,jdbcType=DOUBLE},
      sell_price_8 = #{sellPrice8,jdbcType=DOUBLE},
      sell_volumn_8 = #{sellVolumn8,jdbcType=DOUBLE},
      sell_price_7 = #{sellPrice7,jdbcType=DOUBLE},
      sell_volumn_7 = #{sellVolumn7,jdbcType=DOUBLE},
      sell_price_6 = #{sellPrice6,jdbcType=DOUBLE},
      sell_volumn_6 = #{sellVolumn6,jdbcType=DOUBLE},
      sell_price_5 = #{sellPrice5,jdbcType=DOUBLE},
      sell_volumn_5 = #{sellVolumn5,jdbcType=DOUBLE},
      sell_price_4 = #{sellPrice4,jdbcType=DOUBLE},
      sell_volumn_4 = #{sellVolumn4,jdbcType=DOUBLE},
      sell_price_3 = #{sellPrice3,jdbcType=DOUBLE},
      sell_volumn_3 = #{sellVolumn3,jdbcType=DOUBLE},
      sell_price_2 = #{sellPrice2,jdbcType=DOUBLE},
      sell_volumn_2 = #{sellVolumn2,jdbcType=DOUBLE},
      sell_price_1 = #{sellPrice1,jdbcType=DOUBLE},
      sell_volumn_1 = #{sellVolumn1,jdbcType=DOUBLE},
      buy_price_1 = #{buyPrice1,jdbcType=DOUBLE},
      buy_volumn_1 = #{buyVolumn1,jdbcType=DOUBLE},
      buy_price_2 = #{buyPrice2,jdbcType=DOUBLE},
      buy_volumn_2 = #{buyVolumn2,jdbcType=DOUBLE},
      buy_price_3 = #{buyPrice3,jdbcType=DOUBLE},
      buy_volumn_3 = #{buyVolumn3,jdbcType=DOUBLE},
      buy_price_4 = #{buyPrice4,jdbcType=DOUBLE},
      buy_volumn_4 = #{buyVolumn4,jdbcType=DOUBLE},
      buy_price_5 = #{buyPrice5,jdbcType=DOUBLE},
      buy_volumn_5 = #{buyVolumn5,jdbcType=DOUBLE},
      buy_price_6 = #{buyPrice6,jdbcType=DOUBLE},
      buy_volumn_6 = #{buyVolumn6,jdbcType=DOUBLE},
      buy_price_7 = #{buyPrice7,jdbcType=DOUBLE},
      buy_volumn_7 = #{buyVolumn7,jdbcType=DOUBLE},
      buy_price_8 = #{buyPrice8,jdbcType=DOUBLE},
      buy_volumn_8 = #{buyVolumn8,jdbcType=DOUBLE},
      buy_price_9 = #{buyPrice9,jdbcType=DOUBLE},
      buy_volumn_9 = #{buyVolumn9,jdbcType=DOUBLE},
      buy_price_10 = #{buyPrice10,jdbcType=DOUBLE},
      buy_volumn_10 = #{buyVolumn10,jdbcType=DOUBLE},
      up_down_rate_close = #{upDownRateClose,jdbcType=DOUBLE},
      pe_rate = #{peRate,jdbcType=DOUBLE},
      trans_rate = #{transRate,jdbcType=DOUBLE},
      pb_rate = #{pbRate,jdbcType=DOUBLE},
      market_value = #{marketValue,jdbcType=DOUBLE},
      avarage_price = #{avaragePrice,jdbcType=DOUBLE},
      total_value = #{totalValue,jdbcType=DOUBLE},
      change_range_rate = #{changeRangeRate,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>